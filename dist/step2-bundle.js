(()=>{"use strict";var n={314:(n,t,e)=>{e.d(t,{Z:()=>u});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".mainPage {\n    width: 40%;\n    height: 727px;\n    margin: 5% auto;\n    border-radius: 4px;\n    background-color: #FFFFFF;\n    border: 1px solid  rgba(0, 0, 0, 0.12);\n    padding: 4%;\n    display: flex;\n    flex-direction: column\n}\n\nheader {\n    background-color: #4E5BA6;\n    height: 80px;\n    display: flex;\n    padding-left: 10%;\n}\n\nheader > p {\n    font-size: larger;\n    color: #FFFFFF;\n}\n\nfooter {\n    border-top: 0.5px solid  rgba(0, 0, 0, 0.2);\n    height: 80px;\n    display: flex;\n}\n\nfooter > p {\n    margin: 0px auto;\n    color:#4E5BA6;\n    top: 35%;\n}\n\nh1 {\n    text-align: center;\n}\n\np{\n    position: relative;\n    top: 10px; \n }\n\ninput {\n    height: 27px;\n    width: 27px;\n    border: 1px solid rgb(209, 209, 209);\n    border-radius: 4px;\n}\n\n.purchaseAmount {\n    display: flex;\n    justify-content: space-between;\n}\n\n.inputAmount {\n    width: 82%;\n    padding-left: 2%;\n    color: gray;\n}\n\n.purchase {\n    width: 13%;\n}\n\nbutton {\n    background-color: #4E5BA6;\n    border-radius: 4px;\n    border: 0px;\n    color:#FFFFFF;\n}\n\nbutton:hover {\n    cursor:pointer\n}\n\n.randomLottoList {\n    height: 300px ;\n    overflow:scroll;\n}\n\n.lottoImg{\n    font-size: xx-large;\n    margin-right: 3%;\n}\n\n.randomLottoList > div {\n    display: flex;\n    align-items: center;\n}\n\n\n.inputLottoBonus {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    grid-template-rows: 30%;\n}\n\n.inputLottoBonus > p {\n    grid-column: 1/3;\n}\n\n.bonusNumber {\n    text-align: right;\n    float: right;\n}\n\n.eachInputLottoNumber, .eachInputBonusNumber {\n    text-align: center;\n}\n\n.result, .restart {\n    width:100%;\n    height: 50px;\n}\n\n.resultPage {\n    position:relative;\n    background-color: #FFFFFF;\n    margin: 0% auto;\n    width: 30%;\n    height: 480px;\n    border-radius: 4px;\n    border: 0;\n    top: 28%;\n    padding: 5%;\n    text-align: center;\n}\n\ntable {\n    margin: 0% auto;\n    width: 90%;\n    height: 50%;\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\n    border-collapse: collapse;\n  }\n\n  th, td {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    padding: 10px;\n  }\n\n.explainRate {\n    font-size: larger;\n    font-weight: bold;\n    margin: 5% 0 10% 0;\n}\n\n","",{version:3,sources:["webpack://./index.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,yBAAyB;IACzB,sCAAsC;IACtC,WAAW;IACX,aAAa;IACb;AACJ;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,2CAA2C;IAC3C,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,SAAS;CACZ;;AAED;IACI,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;IACX,aAAa;AACjB;;AAEA;IACI;AACJ;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;;AAGA;IACI,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,eAAe;IACf,UAAU;IACV,aAAa;IACb,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,WAAW;IACX,yCAAyC;IACzC,yBAAyB;EAC3B;;EAEA;IACE,4CAA4C;IAC5C,aAAa;EACf;;AAEF;IACI,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;AACtB",sourcesContent:[".mainPage {\n    width: 40%;\n    height: 727px;\n    margin: 5% auto;\n    border-radius: 4px;\n    background-color: #FFFFFF;\n    border: 1px solid  rgba(0, 0, 0, 0.12);\n    padding: 4%;\n    display: flex;\n    flex-direction: column\n}\n\nheader {\n    background-color: #4E5BA6;\n    height: 80px;\n    display: flex;\n    padding-left: 10%;\n}\n\nheader > p {\n    font-size: larger;\n    color: #FFFFFF;\n}\n\nfooter {\n    border-top: 0.5px solid  rgba(0, 0, 0, 0.2);\n    height: 80px;\n    display: flex;\n}\n\nfooter > p {\n    margin: 0px auto;\n    color:#4E5BA6;\n    top: 35%;\n}\n\nh1 {\n    text-align: center;\n}\n\np{\n    position: relative;\n    top: 10px; \n }\n\ninput {\n    height: 27px;\n    width: 27px;\n    border: 1px solid rgb(209, 209, 209);\n    border-radius: 4px;\n}\n\n.purchaseAmount {\n    display: flex;\n    justify-content: space-between;\n}\n\n.inputAmount {\n    width: 82%;\n    padding-left: 2%;\n    color: gray;\n}\n\n.purchase {\n    width: 13%;\n}\n\nbutton {\n    background-color: #4E5BA6;\n    border-radius: 4px;\n    border: 0px;\n    color:#FFFFFF;\n}\n\nbutton:hover {\n    cursor:pointer\n}\n\n.randomLottoList {\n    height: 300px ;\n    overflow:scroll;\n}\n\n.lottoImg{\n    font-size: xx-large;\n    margin-right: 3%;\n}\n\n.randomLottoList > div {\n    display: flex;\n    align-items: center;\n}\n\n\n.inputLottoBonus {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    grid-template-rows: 30%;\n}\n\n.inputLottoBonus > p {\n    grid-column: 1/3;\n}\n\n.bonusNumber {\n    text-align: right;\n    float: right;\n}\n\n.eachInputLottoNumber, .eachInputBonusNumber {\n    text-align: center;\n}\n\n.result, .restart {\n    width:100%;\n    height: 50px;\n}\n\n.resultPage {\n    position:relative;\n    background-color: #FFFFFF;\n    margin: 0% auto;\n    width: 30%;\n    height: 480px;\n    border-radius: 4px;\n    border: 0;\n    top: 28%;\n    padding: 5%;\n    text-align: center;\n}\n\ntable {\n    margin: 0% auto;\n    width: 90%;\n    height: 50%;\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\n    border-collapse: collapse;\n  }\n\n  th, td {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    padding: 10px;\n  }\n\n.explainRate {\n    font-size: larger;\n    font-weight: bold;\n    margin: 5% 0 10% 0;\n}\n\n"],sourceRoot:""}]);const u=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var u=0;u<this.length;u++){var c=this[u][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],u=0;u<n.length;u++){var c=n[u],l=r.base?c[0]+r.base:c[0],s=i[l]||0,A="".concat(l," ").concat(s);i[l]=s+1;var f=e(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var d=o(p,r);r.byIndex=u,t.splice(u,0,{identifier:A,updater:d,references:1})}a.push(A)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var u=e(i[a]);t[u].references--}for(var c=r(n,o),l=0;l<i.length;l++){var s=e(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),a=e.n(i),u=e(565),c=e.n(u),l=e(216),s=e.n(l),A=e(589),f=e.n(A),p=e(314),d={};function m(n){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},m(n)}function h(n){return function(n){if(Array.isArray(n))return y(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,t){if(n){if("string"==typeof n)return y(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?y(n,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function b(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==m(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}function g(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,v(n,t,"get"))}function v(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}d.styleTagTransform=f(),d.setAttributes=c(),d.insert=a().bind(null,"head"),d.domAPI=o(),d.insertStyleElement=s(),t()(p.Z,d),p.Z&&p.Z.locals&&p.Z.locals;var I=new WeakMap;const C=function(){function n(t){var e,r,o;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),o={writable:!0,value:void 0},function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,r=I),r.set(e,o),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,v(n,t,"set"),e)}(this,I,t.sort((function(n,t){return n-t})))}var t,e;return t=n,(e=[{key:"getLottoString",value:function(){return g(this,I).join(", ")}},{key:"matchNumbers",value:function(n){return new Set([].concat(h(g(this,I)),h(n))).size}},{key:"matchBonus",value:function(n){return g(this,I).includes(n)}}])&&b(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();Object.freeze({INPUT_PURCHASE_AMOUNT:"구입금액을 입력해 주세요.\n",INPUT_LOTTO_NUMBERS:"\n당첨 번호를 입력해 주세요.\n",INPUT_BONUS_NUMBER:"\n보너스 번호를 입력해 주세요.\n",INPUT_RESTART_COMMAND:"\n다시 시작하시겠습니까? (y/n)\n",RESTART:"\n게임을 다시 시작합니다.\n",QUIT:"\n게임을 종료합니다.\n"}),Object.freeze((function(n){return"".concat(n,"개를 구매했습니다.")}));var E={NUMBER:"[ERROR] 숫자를 입력해주세요.",OVER_UNIT:"[ERROR] 천 원 이상 입력해주세요.",SIZE:"[ERROR] 1 ~ 45 사이의 서로 다른 숫자 6개를 입력해주세요.",RANGE:"[ERROR] 1 ~ 45 사이의 값을 입력하세요.",DUPLICATED:"[ERROR] 중복된 숫자가 있습니다.",DIVIDE:"[ERROR] 로또 1매 가격으로 나누어 떨어지는 금액을 입력하세요.",RESTART:"[ERROR] y 혹은 n으로 입력해주세요."};Object.freeze(E);var B={UNIT:1e3,MIN_RANGE:1,MAX_RANGE:45,SIZE:6,RANK:5};Object.freeze(B);var w={RESTART:"y",QUIT:"n"};Object.freeze(w);var S=[5e3,5e4,15e5,3e7,2e9];Object.freeze(S);const x={generateRandomNumbers:function(){for(var n=[];n.length<B.SIZE;)this.generateRandomNumber(n);return n},generateRandomNumber:function(n){var t=Math.floor(Math.random()*(B.MAX_RANGE-B.MIN_RANGE+1))+B.MIN_RANGE;this.isDuplicated(n,t)||n.push(t)},isDuplicated:function(n,t){return n.includes(t)}};const k={getPrize:function(n){var t=0;return n.forEach((function(e,r){t+=S[r]*n[r]})),t},getProfit:function(n,t){return(this.getPrize(n)/(t*B.UNIT)*100).toFixed(1)}};function R(n){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},R(n)}function N(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function L(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==R(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}const T=function(){function n(t){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.lotteries=[],this.rank=new Array(B.RANK).fill(0),this.generateLotteries(t/B.UNIT)}var t,e;return t=n,(e=[{key:"generateLotteries",value:function(n){var t=this;Array.from({length:n},(function(){var n=x.generateRandomNumbers();t.lotteries.push(new C(n))}))}},{key:"getLotteries",value:function(){return this.lotteries.map((function(n){return n.getLottoString()}))}},{key:"getRankResult",value:function(n,t){var e,r=this,o=new Array(B.RANK).fill(0);return this.lotteries.forEach((function(e){o[r.getRank(e.matchNumbers(n),e.matchBonus(t))]++})),[].concat(function(n){if(Array.isArray(n))return N(n)}(e=o)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(e)||function(n,t){if(n){if("string"==typeof n)return N(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?N(n,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[k.getProfit(o,this.lotteries.length)])}},{key:"getRank",value:function(n,t){if(!(n>9))return 6===n||7===n&&t?10-n:9-n}}])&&L(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function F(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}const j={purchaseAmount:function(n){this.inputIsInteger(n),this.purchaseAmountIsOverUnit(n),this.purchaseAmountDivideUnit(n)},inputIsInteger:function(n){if(!Number.isInteger(n))throw new Error(E.NUMBER)},purchaseAmountIsOverUnit:function(n){if(!(n>=B.UNIT))throw new Error(E.OVER_UNIT)},purchaseAmountDivideUnit:function(n){if(n%B.UNIT!=0)throw new Error(E.DIVIDE)},lottoNumbers:function(n){var t=this;n.forEach((function(n){t.inputIsInteger(n),t.numberInRange(n)})),this.lottoNumberSize(n),this.isDuplicated(n)},lottoNumberSize:function(n){if(n.length!==B.SIZE)throw new Error(E.SIZE)},isDuplicated:function(n){var t=new Set(n);if(n.length!==t.size)throw new Error(E.DUPLICATED)},numberInRange:function(n){if(!(n>=B.MIN_RANGE&&n<=B.MAX_RANGE))throw new Error(E.RANGE)},bonusNumber:function(n,t){var e;this.inputIsInteger(t),this.numberInRange(t),this.isDuplicated([].concat(function(n){if(Array.isArray(n))return F(n)}(e=n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(e)||function(n,t){if(n){if("string"==typeof n)return F(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?F(n,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[t]))},restartCommand:function(n){if(n!==w.RESTART&&n!==w.QUIT)throw new Error(E.RESTART)}};function U(n){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},U(n)}function O(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,P(r.key),r)}}function P(n){var t=function(n,t){if("object"!==U(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===U(t)?t:String(t)}const M=function(){function n(){var t,e,r;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t=this,r=void 0,(e=P(e="lottoGame"))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r}var t,e;return t=n,(e=[{key:"amountTurnLotteries",value:function(n){try{return j.purchaseAmount(+n),this.makeLottoGame(+n)}catch(n){alert(n.message)}}},{key:"makeLottoGame",value:function(n){return this.lottoGame=new T(n),this.lottoGame.getLotteries()}},{key:"inputLottoBonus",value:function(n,t){try{return j.lottoNumbers(n),j.bonusNumber(n,t),this.generateLottoGameResult(n,t)}catch(n){alert(n.message)}}},{key:"generateLottoGameResult",value:function(n,t){return this.lottoGame.getRankResult(n,t)}}])&&O(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function z(n){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},z(n)}function _(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==z(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===z(o)?o:String(o)),r)}var o}var D=document.querySelector(".inputAmount"),G=document.querySelector(".inputAmountNext"),Z=document.querySelector("dialog");(new(function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n)}var t,e;return t=n,(e=[{key:"play",value:function(){this.controller=new M,this.addEvent()}},{key:"addEvent",value:function(){var n=this,t=document.querySelector(".purchase"),e=document.querySelector(".restart"),r=document.querySelector(".result");t.addEventListener("click",this.checkAmount.bind(this)),D.addEventListener("keypress",(function(t){"Enter"===t.key&&n.checkAmount()})),D.addEventListener("click",this.clickInputAmount.bind(this)),r.addEventListener("click",this.clickResult.bind(this)),e.addEventListener("click",this.clickRestart.bind(this))}},{key:"clickInputAmount",value:function(){this.resetInputElement(D),D.style.color="black"}},{key:"checkAmount",value:function(n){var t=this.controller.amountTurnLotteries(D.value);this.resetInputAmount(),t&&(this.showRandomLottoAmount(t),this.showRandomLottoList(t))}},{key:"resetInputAmount",value:function(){D.value="금액",D.style.color="gray"}},{key:"showRandomLottoAmount",value:function(n){document.querySelector(".randomLottoAmount").textContent="".concat(n.length)}},{key:"showRandomLottoList",value:function(n){var t=this,e=document.querySelector(".randomLottoList");e.innerHTML="",n.forEach((function(n){e.appendChild(t.makeEachRandomLotto(n))})),G.style.display="block"}},{key:"makeEachRandomLotto",value:function(n){var t=document.createElement("div");return t.appendChild(this.makeSpanElement("lottoImg","🎟")),t.appendChild(this.makeSpanElement("randomLottoNumbers",n)),t}},{key:"makeSpanElement",value:function(n,t){var e=document.createElement("span");return e.classList.add(n),e.textContent=t,e}},{key:"clickResult",value:function(){var n=this.checkLottoBonus();n&&(Z.showModal(),this.showResult(n))}},{key:"checkLottoBonus",value:function(){var n=this,t=document.querySelectorAll(".eachInputLottoNumber"),e=document.querySelector(".eachInputBonusNumber"),r=[];t.forEach((function(t){r.push(+t.value),n.resetInputElement(t)}));var o=e.value;return this.resetInputElement(e),this.controller.inputLottoBonus(r,+o)}},{key:"resetInputElement",value:function(n){n.value=""}},{key:"showResult",value:function(n){document.querySelectorAll(".winnerCount").forEach((function(t,e){return t.textContent=n[e]})),document.querySelector(".rate").textContent="".concat(n[n.length-1])}},{key:"clickRestart",value:function(){Z.close(),G.style.display="none"}}])&&_(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}())).play()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,